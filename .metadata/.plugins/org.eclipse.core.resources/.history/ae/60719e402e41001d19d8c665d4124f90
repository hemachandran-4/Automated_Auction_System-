package com.auction_dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.auction_bean.Buyer;
import com.auction_bean.Product;
import com.auction_exception.BuyerException;
import com.auction_exception.ProductException;
import com.auction_utility.DBUtil;

public class BuyerImplementation implements BuyerInterface{
		@Override
		
		public String registerBuyer(Buyer b) throws BuyerException {
			String message="Registration Unsuccessful";
			try(Connection conn=DBUtil.provideConnection()){
				
				PreparedStatement ps=conn.prepareStatement("insert into buyer(buyer_name,buyer_email,buyer_password,buyer_signup_date) value(?,?,?,?)");
				ps.setString(1, b.getBuyer_name());
				ps.setString(2, b.getBuyer_email());
				ps.setString(3, b.getBuyer_password());
				ps.setDate(4, b.getBuyer_signup_date());
				
				int x=ps.executeUpdate();
				if(x>0) message="Registration successful";
				else throw new BuyerException(message);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				message=e.getMessage();
			}
			return message;
		}

		@Override
		public Buyer loginBuyer(String email, String password) throws BuyerException {
			
			try(Connection conn=DBUtil.provideConnection()){
				PreparedStatement ps=conn.prepareStatement("select * from buyer where buyer_email=? AND buyer_password=?");
				ps.setString(1, email);
				ps.setString(2, password);
				
				ResultSet rs=ps.executeQuery();
				if(rs.next()) {
					String name=rs.getString("buyer_name");
					Date b_signup_date=rs.getDate("buyer_signup_date");
					
					Buyer b1=new Buyer(name, email, password, b_signup_date);
					return b1;
				}
				else {
					throw new BuyerException("Invalid Entry");
				}
			}catch(SQLException e) {
				System.out.println(e.getMessage());
			}
			return null;
		}

		
		@Override
		public List<Product> viewAllProdcut() throws ProductException {
			List<Product> plist=new ArrayList<>();
			try(Connection conn=DBUtil.provideConnection()){
				PreparedStatement ps=conn.prepareStatement("select * from product where availability=?");
				ps.setBoolean(1, true);
				
				ResultSet rs=ps.executeQuery();
				while(rs.next()) {
					
				}
			}
			catch(SQLException e) {
				System.out.println(e.getMessage());
			}
			if(plist.size()==0) throw new ProductException("No products found. Try later");
			return null;
		}
}
